package Commands;

import Commons.Storage;
import Commons.UserInteraction;
import Tasks.TaskList;
import javafx.util.Pair;

import java.util.ArrayList;

public class RetrieveFreeTimesCommand extends Command {
    private Integer option;
    private static String selectedOption;
    private static String selectedOptionCommand;
    private final String emptyFreeTimeList = "Please find free times by invoking the command shown below\n" +
            "Find 'x' hours, where 'x' is a digit between 1 - 16\n" +
            "Followed by the command\n" +
            "retrieve/time 'x', where 'x' is a digit between 1- 5";

    public RetrieveFreeTimesCommand(Integer option) {
        this.option = option;
    }

    private boolean checkIsEmpty (ArrayList<Pair<String, String>> retrievedFreeTimes){
        return (retrievedFreeTimes.size() == 0) ? true : false;
    }

    private boolean checkIfInvalidOption (){
        return (option < 1 || option > 5) ? true : false;
    }

    /**
     * Executes the retriever of earliest available block period generated by FindFreeTimesCommand.
     * @param events The TaskList object for events
     * @param deadlines The TaskList object for deadlines
     * @param ui The Ui object to display the done task message
     * @param storage The Storage object to access file to load or save the tasks
     * @return This returns the method in the Ui object which returns the string to display freeTimes message
     */
    @Override
    public String execute(TaskList events, TaskList deadlines, UserInteraction ui, Storage storage) {
        ArrayList<Pair<String, String>> retrievedFreeTimes = FindFreeTimesCommand.getCompiledFreeTimesList();
        if (checkIsEmpty(retrievedFreeTimes))return ui.showSelectionOptionEmptyList();
        else if(checkIfInvalidOption()) return "Please select options between 1 - 5";
        selectedOption = retrievedFreeTimes.get(option-1).getKey();
        selectedOptionCommand = retrievedFreeTimes.get(option-1).getValue();
        return ui.showSelectionOption(option, selectedOption);
    }

    public static String getSelectedOption() {
        return selectedOptionCommand;
    }
}
